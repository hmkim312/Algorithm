{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "URL : <https://programmers.co.kr/learn/courses/30/lessons/17681>{:target=\"_blank\"}\n",
    "#### 비밀지도\n",
    "- 네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다.\n",
    "\n",
    "1. 지도는 한 변의 길이가 n인 정사각형 배열 형태로, 각 칸은 공백(\" ) 또는벽(#\") 두 종류로 이루어져 있다.\n",
    "2. 전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 지도 1과 지도 2라고 하자. 지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다. 지도 1과 지도 2에서 모두 공백인 부분은 전체 지도에서도 공백이다.\n",
    "3. 지도 1과 지도 2는 각각 정수 배열로 암호화되어 있다.\n",
    "4. 암호화된 배열은 지도의 각 가로줄에서 벽 부분을 1, 공백 부분을 0으로 부호화했을 때 얻어지는 이진수에 해당하는 값의 배열이다.\n",
    "\n",
    "- 네오가 프로도의 비상금을 손에 넣을 수 있도록, 비밀지도의 암호를 해독하는 작업을 도와줄 프로그램을 작성하라.\n",
    "\n",
    "#### 입력 형식\n",
    "- 입력으로 지도의 한 변 크기 n 과 2개의 정수 배열 arr1, arr2가 들어온다.\n",
    "- 1 ≦ n ≦ 16\n",
    "- arr1, arr2는 길이 n인 정수 배열로 주어진다.\n",
    "- 정수 배열의 각 원소 x를 이진수로 변환했을 때의 길이는 n 이하이다. 즉, 0 ≦ x ≦ 2n - 1을 만족한다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 문제 풀이\n",
    "- format을 이용하여 10진수를 2진수로 바꾼다.\n",
    "- 주어진 n보다 2진수의 길이가 길면 n까지만 짤라주고\n",
    "- 주어진 n보다 2진수의 길이가 짧으면 모자른 만큼 '3'을 넣어준다.\n",
    "- 2진수로 바꾼 b1과 b2를 int형으로 변환하여 더하고, 0과1, 1과1과 1과3이 더해진 경우의 수 1, 2, 4 는 #으로, 0은 ' '(공백)으로 바꾸어 answer 리스트에 저장"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-28T00:51:17.489730Z",
     "iopub.status.busy": "2020-12-28T00:51:17.489517Z",
     "iopub.status.idle": "2020-12-28T00:51:17.495825Z",
     "shell.execute_reply": "2020-12-28T00:51:17.495012Z",
     "shell.execute_reply.started": "2020-12-28T00:51:17.489707Z"
    }
   },
   "outputs": [],
   "source": [
    "def solution(n, arr1, arr2):\n",
    "    answer = []\n",
    "    for i in range(n):\n",
    "        b1 = format(arr1[i], 'b')\n",
    "        b2 = format(arr2[i], 'b')\n",
    "    \n",
    "        if len(b1) > n:\n",
    "            b1 = b1[:n]\n",
    "        elif len(b1) < n:\n",
    "            k = n - len(b1)\n",
    "            b1 = '3' * k + b1\n",
    "        if len(b2) > n:\n",
    "            b2 = b2[:n]\n",
    "        elif len(b2) < n:\n",
    "            k = n - len(b2)\n",
    "            b2 = '3' * k + b2\n",
    "        else :\n",
    "            pass\n",
    "    \n",
    "        result = str(int(b1) + int(b2)).replace('1', '#').replace('2', '#').replace('4', '#').replace('0', ' ').replace('3', ' ').replace('6', ' ')\n",
    "        answer.append(result)\n",
    "    return answer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-28T01:03:00.648544Z",
     "iopub.status.busy": "2020-12-28T01:03:00.648194Z",
     "iopub.status.idle": "2020-12-28T01:03:00.653076Z",
     "shell.execute_reply": "2020-12-28T01:03:00.652501Z",
     "shell.execute_reply.started": "2020-12-28T01:03:00.648494Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['#####', '# # #', '### #', '#  ##', '#####']"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n = 5\n",
    "arr1 = [9, 20, 28, 18, 11]\n",
    "arr2 = [30, 1, 21, 17, 28]\n",
    "solution(n, arr1, arr2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-28T01:03:14.093282Z",
     "iopub.status.busy": "2020-12-28T01:03:14.093064Z",
     "iopub.status.idle": "2020-12-28T01:03:14.098286Z",
     "shell.execute_reply": "2020-12-28T01:03:14.097640Z",
     "shell.execute_reply.started": "2020-12-28T01:03:14.093258Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['######', '###  #', '##  ##', '#### ', '#####', '### # ']"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n = 6\n",
    "arr1 = [46, 33, 33 ,22, 31, 50]\n",
    "arr2 = [27 ,56, 19, 14, 14, 10]\n",
    "solution(n, arr1, arr2)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
